[{"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\index.js":"1","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\App.js":"2","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Auth.js":"4","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Home.js":"5","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\fBase.js":"6","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Nweet.js":"9","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\NweetFactory.js":"10","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\AuthForm.js":"11","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\ProfileForm.js":"12","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\FileUpload.js":"13","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\LikeComponent.js":"14"},{"size":233,"mtime":1611022186571,"results":"15","hashOfConfig":"16"},{"size":2424,"mtime":1613370617646,"results":"17","hashOfConfig":"16"},{"size":1120,"mtime":1611045251898,"results":"18","hashOfConfig":"16"},{"size":1561,"mtime":1611042125350,"results":"19","hashOfConfig":"16"},{"size":1438,"mtime":1613376201773,"results":"20","hashOfConfig":"16"},{"size":836,"mtime":1613370058151,"results":"21","hashOfConfig":"16"},{"size":1785,"mtime":1611280753378,"results":"22","hashOfConfig":"16"},{"size":605,"mtime":1611149346416,"results":"23","hashOfConfig":"16"},{"size":2807,"mtime":1613376692290,"results":"24","hashOfConfig":"16"},{"size":3022,"mtime":1613376263025,"results":"25","hashOfConfig":"16"},{"size":2429,"mtime":1613367062105,"results":"26","hashOfConfig":"16"},{"size":3248,"mtime":1613368608005,"results":"27","hashOfConfig":"16"},{"size":607,"mtime":1611152087119,"results":"28","hashOfConfig":"16"},{"size":709,"mtime":1611282634975,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1xmhbgr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\index.js",[],["61","62"],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\App.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Auth.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Home.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\fBase.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Profile.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Nweet.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\NweetFactory.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\AuthForm.js",["63"],"import React, {useState} from 'react';\r\nimport { authService } from \"fBase\";\r\n\r\nconst AuthForm = () => {\r\n  //value를 사용하기 위해 state 사용\r\n  const [error, setError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true); //새로운 유저인지 true: 계정 생성, false: 로그인\r\n\r\n  const onValueChanged = (event) => {\r\n    const {\r\n      target: { name, value }, //target: 변경이 일어난 부분\r\n    } = event; //get name and value\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value); //input의 value가 변경될 때마다 state의 값도 변한다. -> 리렌더링\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  // seetPersistance : 유저가 저장되는 방식 설정 local / session / none\r\n  const onFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = newAccount\r\n        ? await authService.createUserWithEmailAndPassword(email, password) // Create account\r\n        : await authService.signInWithEmailAndPassword(email, password); // Log in\r\n      ;\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  //newAccount를 이전값과 반대인 값으로 바꿔주는 함수. true <-> false\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onFormSubmit} className=\"formContainer\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onValueChanged}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onValueChanged}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create new account\" : \"Log in\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      {/* 반대의 기능 사용 create new account <-> sign in */}\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create new account\"}\r\n      </span>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm\r\n","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\ProfileForm.js",["64"],"import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { storageService } from \"fBase\";\r\nimport FileUpload from \"components/FileUpload\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ProfileForm({ refreshUser, userObj }) {\r\n\r\n  const history = useHistory();\r\n  const [originProfile, setOriginProfile] = useState(\"\"); //storage에서 받아온 사진 변수\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [newPhoto, setNewPhoto] = useState(\"\"); //새로 업로드한 사진 변수\r\n\r\n  const getUrl = async() => {\r\n    const attachmentRef = storageService\r\n      .ref()\r\n      .child(`${userObj.uid}/userPhoto`); \r\n      \r\n    await attachmentRef\r\n    .getDownloadURL().then((url) => {\r\n      setOriginProfile(url);\r\n      setNewPhoto(url);\r\n    });\r\n  } \r\n\r\n  useEffect(() => {\r\n    getUrl();\r\n  }, []);\r\n\r\n  const onTextChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent; //finishedEvent.currentTarget.result 값을 ES6로 표현한 것\r\n      setNewPhoto(result);\r\n    };\r\n\r\n    if (files.length > 0) {\r\n      //오류 수정 -> 파일선택하려다 취소한 경우\r\n      const theFile = files[0];\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n\r\n    //FIND -> UPDATE USER INFO\r\n    if (newPhoto !== originProfile) {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/userPhoto`);\r\n      await attachmentRef.putString(newPhoto, \"data_url\");\r\n    }\r\n\r\n    \r\n    alert(\"프로필이 성공적으로 업데이트 되었습니다.\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setNewPhoto(originProfile); //원래 사진으로 변경\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} className=\"profileForm\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Display your name\"\r\n        autoFocus\r\n        required\r\n        value={newDisplayName}\r\n        onChange={onTextChange}\r\n        className=\"formInput\"\r\n      />\r\n      {newPhoto ? (\r\n        <img src={newPhoto} alt=\"profile_photo\" width=\"300\" id=\"profilePhoto\"/>\r\n      ) : (\r\n        <h3>프로필 사진을 추가해주세요.</h3>\r\n      )}\r\n\r\n      <FileUpload onFileChange={onFileChange} />\r\n\r\n      {newPhoto !== originProfile && (\r\n        <div className=\"factoryForm_clear\" onClick={onClearAttachment}>\r\n          <span>Remove</span>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n      )}\r\n\r\n      <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;\r\n","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\FileUpload.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\LikeComponent.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":27,"column":13,"nodeType":"71","messageId":"72","endLine":27,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":29,"column":6,"nodeType":"75","endLine":29,"endColumn":8,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUrl'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [getUrl]",{"range":"82","text":"83"},[949,951],"[getUrl]"]