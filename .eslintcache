[{"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\index.js":"1","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\App.js":"2","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Auth.js":"4","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Home.js":"5","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\fBase.js":"6","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Nweet.js":"9","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\NweetFactory.js":"10","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\AuthForm.js":"11"},{"size":233,"mtime":1611022186571,"results":"12","hashOfConfig":"13"},{"size":2228,"mtime":1610941328258,"results":"14","hashOfConfig":"13"},{"size":1120,"mtime":1611045251898,"results":"15","hashOfConfig":"13"},{"size":1561,"mtime":1611042125350,"results":"16","hashOfConfig":"13"},{"size":1389,"mtime":1611040555508,"results":"17","hashOfConfig":"13"},{"size":729,"mtime":1610689977380,"results":"18","hashOfConfig":"13"},{"size":997,"mtime":1611022279757,"results":"19","hashOfConfig":"13"},{"size":1747,"mtime":1611056647372,"results":"20","hashOfConfig":"13"},{"size":2554,"mtime":1611040833149,"results":"21","hashOfConfig":"13"},{"size":3188,"mtime":1611055572439,"results":"22","hashOfConfig":"13"},{"size":2446,"mtime":1611020822065,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xmhbgr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\index.js",[],["49","50"],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\App.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Router.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Auth.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Home.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\fBase.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\routes\\Profile.js",[],"C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\Nweet.js",["51"],"import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Nweet({ nweetObj, isOwner }) {\r\n  const [isEditing, setIsEditing] = useState(false); //Is editing or not\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text); //수정될 nweet\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete(); //id를 알고 있기 때문에 가능./\r\n      await storageService.refFromURL(nweetObj.attachmentURL).delete(); //Delete file\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setIsEditing((prev) => !prev);\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmitHandler = async(e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <article className=\"nweet\">\r\n      {isEditing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmitHandler} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onTextChange}\r\n                  required\r\n                  autoFocus\r\n                  placeholder=\"당신의 Nweet을 수정하세요.\"\r\n                  value={newNweet}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Nweet 수정\" className=\"formBtn\"/>\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} />}\r\n          {isOwner && (\r\n            <>\r\n              <div className=\"nweet_actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash}/>\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Nweet;\r\n","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\NweetFactory.js",["52"],"import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nfunction NweetFactory({ userObj }) {\r\n    const [nweet, setNweet] = useState(\"\"); //only for the form\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentURL = \"\";\r\n\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n\r\n    if (attachment !== \"\") {\r\n      // Upload Image\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`); //child: 이미지의 path - folder\r\n      const response = await attachmentRef.putString(attachment, \"data_url\"); //.putString(data, data format)\r\n      attachmentURL = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentURL,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  }\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent; //finishedEvent.currentTarget.result 값을 ES6로 표현한 것\r\n      setAttachment(result);\r\n    };\r\n\r\n    // if (files.lenght > 0) {\r\n    //   //오류 수정 -> 파일선택하려다 취소한 경우\r\n    //   const theFile = files[0];\r\n      reader.readAsDataURL(theFile);\r\n    // }\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} className=\"factoryForm\">\r\n      <div className=\"factoryInput_container\">\r\n        <input\r\n          className=\"factoryInput_input\"\r\n          value={nweet}\r\n          onChange={onTextChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput_arrow\"/>\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput_label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus}/>\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n        />\r\n        {attachment && (\r\n          <div className=\"factoryForm_attachment\">\r\n            <img src={attachment} style={{backgroundImage: attachment,}} />\r\n            <div calssName=\"factoryForm_clear\" onClick={onClearAttachment} >\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes}/>\r\n            </div>\r\n          </div>\r\n        )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NweetFactory\r\n","C:\\Users\\lg\\Documents\\2021\\nwitter\\src\\components\\AuthForm.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":64,"column":38,"nodeType":"59","endLine":64,"endColumn":74},{"ruleId":"57","severity":1,"message":"58","line":101,"column":13,"nodeType":"59","endLine":101,"endColumn":76},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]