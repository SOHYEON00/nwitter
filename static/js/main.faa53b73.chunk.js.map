{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/FileUpload.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/ProfileForm.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseInstance","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","error","setError","email","setEmail","password","setPassword","newAccount","setNewAccount","onValueChanged","event","target","name","value","onFormSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","data","console","log","message","onSubmit","className","type","placeholder","required","onChange","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","faGoogle","faGithub","Nweet","nweetObj","isOwner","isEditing","setIsEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","onSubmitHandler","e","update","autoFocus","src","alt","faTrash","faPencilAlt","FileUpload","onFileChange","htmlFor","faPlus","accept","style","opacity","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","like","collection","add","maxLength","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","currentPage","useLocation","pathname","to","faUser","displayName","ProfileForm","refreshUser","history","useHistory","originProfile","setOriginProfile","newDisplayName","setNewDisplayName","newPhoto","setNewPhoto","getUrl","then","url","updateProfile","alert","push","width","length","Profile","signOut","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","photoUrl","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAiBaA,G,kBAFEC,IAASC,cAVD,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAMqBH,KAEnBS,EAAcT,IAASU,OACvBC,EAAYX,IAASY,YACrBC,EAAiBb,IAASc,UCsDxBC,EAxEE,WAAM,MAEKC,mBAAS,IAFd,mBAEdC,EAFc,KAEPC,EAFO,OAGKF,mBAAS,IAHd,mBAGdG,EAHc,KAGPC,EAHO,OAIWJ,mBAAS,IAJpB,mBAIdK,EAJc,KAIJC,EAJI,OAKeN,oBAAS,GALxB,mBAKdO,EALc,KAKFC,EALE,KAOfC,EAAiB,SAACC,GAAW,IAAD,EAG5BA,EADFC,OAAUC,EAFoB,EAEpBA,KAAMC,EAFc,EAEdA,MAGL,UAATD,EACFR,EAASS,GACS,aAATD,GACTN,EAAYO,IAKVC,EAAY,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACnBL,EAAMM,iBADa,UAGJT,EAHI,gCAIPd,EAAYwB,+BAA+Bd,EAAOE,GAJ3C,2DAKPZ,EAAYyB,2BAA2Bf,EAAOE,GALvC,4BAGXc,EAHW,KAMjBC,QAAQC,IAAIF,GANK,kDAQjBjB,EAAS,KAAMoB,SARE,0DAAH,sDAelB,OACE,qCACE,uBAAMC,SAAUT,EAAcU,UAAU,gBAAxC,UACE,uBACEZ,KAAK,QACLa,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRd,MAAOV,EACPyB,SAAUnB,EACVe,UAAU,cAEZ,uBACEZ,KAAK,WACLa,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRd,MAAOR,EACPuB,SAAUnB,EACVe,UAAU,cAEZ,uBACEC,KAAK,SACLZ,MAAON,EAAa,qBAAuB,SAC3CiB,UAAU,yBAEXvB,GAAS,sBAAMuB,UAAU,YAAhB,SAA6BvB,OAGzC,sBAAM4B,QA/BY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MA+BnBN,UAAU,aAAxC,SACGjB,EAAa,UAAY,2B,gBCbnBwB,EA7CF,WAEX,IAAMC,EAAa,uCAAG,WAAMtB,GAAN,mBAAAK,EAAA,4DAIR,YAHIH,EAASF,EAAlBC,OAASC,MAIdqB,EAAW,IAAIlD,EAAiBW,KAAKwC,mBACpB,WAATtB,IACRqB,EAAW,IAAIlD,EAAiBW,KAAKyC,oBAPnB,SASD1C,EAAY2C,gBAAgBH,GAT3B,OASdd,EATc,OAUpBC,QAAQC,IAAIF,GAVQ,2CAAH,sDAanB,OACE,sBAAKK,UAAU,gBAAf,UACE,cAAC,IAAD,CACEa,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLhB,UAAU,iBAEZ,cAAC,EAAD,IACA,0BAASA,UAAU,mBAAnB,UACE,yBACEK,QAASG,EACTpB,KAAK,SACLY,UAAU,kBAHZ,2EAME,cAAC,IAAD,CAAiBa,KAAMI,IAAUjB,UAAU,kBAE7C,yBACEK,QAASG,EACTpB,KAAK,SACLY,UAAU,kBAHZ,2EAME,cAAC,IAAD,CAAiBa,KAAMK,IAAUlB,UAAU,yB,gBCiCtCmB,MA7Ef,YAAuC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAAW,EACF7C,oBAAS,GADP,mBAC7B8C,EAD6B,KAClBC,EADkB,OAEJ/C,mBAAS4C,EAASI,MAFd,mBAE7BC,EAF6B,KAEnBC,EAFmB,KAI9BC,EAAa,uCAAG,sBAAApC,EAAA,0DACTqC,OAAOC,QAAQ,kEADN,gCAGZ1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAH3B,uBAIZ3D,EAAe4D,WAAWb,EAASc,eAAeF,SAJtC,2CAAH,qDAQbG,EAAgB,WACpBZ,GAAa,SAACjB,GAAD,OAAWA,MAUpB8B,EAAe,uCAAG,WAAMC,GAAN,SAAA9C,EAAA,6DACtB8C,EAAE7C,iBADoB,SAEhBrB,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMO,OAAO,CAClDd,KAAMC,IAHc,OAKtBF,GAAa,GALS,2CAAH,sDAQrB,OACE,yBAASvB,UAAU,QAAnB,SACGsB,EACC,mCACGD,GACC,qCACE,uBAAMtB,SAAUqC,EAAiBpC,UAAU,sBAA3C,UACE,uBACEC,KAAK,OACLG,SAxBK,SAAClB,GAAW,IAEnBG,EACRH,EADFC,OAAUE,MAEZqC,EAAYrC,IAqBEc,UAAQ,EACRoC,WAAS,EACTrC,YAAY,iEACZb,MAAOoC,EACPzB,UAAU,cAEZ,uBAAOC,KAAK,SAASZ,MAAM,qBAAWW,UAAU,eAElD,sBAAMK,QAAS8B,EAAenC,UAAU,oBAAxC,yBAON,qCACE,6BAAKoB,EAASI,OACbJ,EAASc,eAAiB,qBAAKM,IAAKpB,EAASc,cAAeO,IAAI,qBAChEpB,GACC,mCACE,sBAAKrB,UAAU,gBAAf,UACE,sBAAMK,QAASsB,EAAf,SACE,cAAC,IAAD,CAAiBd,KAAM6B,QAEzB,sBAAMrC,QAAS8B,EAAf,SACE,cAAC,IAAD,CAAiBtB,KAAM8B,mB,QC/C1BC,MApBf,YAAqC,IAAhBC,EAAe,EAAfA,aACnB,OACE,qCACE,wBAAOC,QAAQ,cAAc9C,UAAU,qBAAvC,UACE,8CACA,cAAC,IAAD,CAAiBa,KAAMkC,SAEzB,uBACEhB,GAAG,cACH9B,KAAK,OACL+C,OAAO,UACP5C,SAAUyC,EACVI,MAAO,CACLC,QAAS,SCoFJC,MA7Ff,YAAoC,IAAZC,EAAW,EAAXA,QAAW,EACL5E,mBAAS,IADJ,mBACxB6E,EADwB,KACjBC,EADiB,OAEK9E,mBAAS,IAFd,mBAExB+E,EAFwB,KAEZC,EAFY,KAI3BpB,EAAe,uCAAG,WAAOlD,GAAP,qBAAAK,EAAA,yDACtBL,EAAMM,iBACF0C,EAAgB,GAEN,KAAVmB,EAJkB,oDAQH,KAAfE,EARkB,wBAUdE,EAAgBpF,EACnBqF,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,gBAZP,SAaGJ,EAAcK,UAAUP,EAAY,YAbvC,cAadQ,EAbc,iBAcEA,EAASL,IAAIM,iBAdf,QAcpB9B,EAdoB,sBAiBhBd,EAAW,CACfI,KAAM6B,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnB1B,gBACAmC,KAAM,GAtBc,UAwBhBlG,EAAUmG,WAAW,UAAUC,IAAInD,GAxBnB,QA0BtBkC,EAAS,IACTE,EAAc,IA3BQ,4CAAH,sDA8DrB,OACE,uBAAMzD,SAAUqC,EAAiBpC,UAAU,cAA3C,UACE,sBAAKA,UAAU,yBAAf,UACE,uBACEA,UAAU,qBACVX,MAAOgE,EACPjD,SAtCa,SAAClB,GAAW,IAEnBG,EACRH,EADFC,OAAUE,MAEZiE,EAASjE,IAmCHY,KAAK,OACLC,YAAY,uBACZsE,UAAW,MAEX,uBAAOvE,KAAK,SAASZ,MAAM,SAASW,UAAU,0BAElD,cAAC,EAAD,CAAY6C,aAtCK,SAAC3D,GAAW,IAIzBuF,EADFvF,EADFC,OAAUuF,MAEU,GAChBC,EAAS,IAAIC,WAEnBD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnBvB,EAAcuB,IAMdJ,EAAOM,cAAcR,MAsBpBlB,GACG,sBAAKvD,UAAU,yBAAf,UACE,qBAAKwC,IAAKe,EAAYN,MAAO,CAAEiC,gBAAiB3B,GAAcd,IAAI,eAClE,sBAAKzC,UAAU,oBAAoBK,QArBnB,WACxBmD,EAAc,KAoBN,UACE,0CACA,cAAC,IAAD,CAAiB3C,KAAMsE,gBCzCtBC,EA9CF,SAAC,GAAiB,IAAfhC,EAAc,EAAdA,QAAc,EACA5E,mBAAS,IADT,mBACrB6G,EADqB,KACbC,EADa,KA6B5B,OAbAC,qBAAU,WAGRpH,EAAUmG,WAAW,UAAUkB,YAAW,SAACC,GACzC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAC9D,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAInC,WAET2F,EAAUI,QAEX,IAID,qCACE,cAAC,EAAD,CAActC,QAASA,IACvB,mCACGiC,EAAOO,KAAI,SAACvC,GACX,OACE,cAAC,EAAD,CAEEjC,SAAUiC,EACVhC,QAASgC,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMtB,aCSV8D,MA5Cf,YAAkC,IAAZzC,EAAW,EAAXA,QAEd0C,EADWC,cACYC,SAE3B,OACE,8BACE,qBAAIhG,UAAU,UAAd,UACE,oBAAI+B,GAAG,SAAP,SACE,eAAC,IAAD,CAAMkE,GAAG,IAAIjG,UAAU,UAAvB,UACE,cAAC,IAAD,CAAiBa,KAAMC,IAAWC,MAAO,UAAWC,KAAK,OACxC,MAAhB8E,EACC,sBAAM9F,UAAU,qBAAqB+B,GAAG,WAAxC,kBAIA,sBAAM/B,UAAU,SAAS+B,GAAG,WAA5B,uBAMN,oBAAIA,GAAG,YAAP,SACE,eAAC,IAAD,CAAMkE,GAAG,WAAWjG,UAAU,UAA9B,UACE,cAAC,IAAD,CAAiBa,KAAMqF,IAAQnF,MAAO,UAAWC,KAAK,OACrC,aAAhB8E,EACC,sBAAM9F,UAAU,qBAAqB+B,GAAG,cAAxC,SACGqB,EAAQ+C,YAAR,UACM/C,EAAQ+C,YADd,kBAEG,YAGN,sBAAMnG,UAAU,SAAS+B,GAAG,cAA5B,SACGqB,EAAQ+C,YAAR,UACM/C,EAAQ+C,YADd,kBAEG,uBCwEPC,MA1Gf,YAAgD,IAAzBC,EAAwB,EAAxBA,YAAajD,EAAW,EAAXA,QAC5BkD,EAAUC,cAD6B,EAEH/H,mBAAS,IAFN,mBAEtCgI,EAFsC,KAEvBC,EAFuB,OAGDjI,mBAAS4E,EAAQ+C,aAHhB,mBAGtCO,EAHsC,KAGtBC,EAHsB,OAIbnI,mBAAS,IAJI,mBAItCoI,EAJsC,KAI5BC,EAJ4B,KAMvCC,EAAM,uCAAG,4BAAAvH,EAAA,6DACPkE,EAAgBpF,EACnBqF,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,eADT,SAIPH,EACLO,iBAAiB+C,MAAK,SAACC,GACtBP,EAAiBO,GACjBH,EAAYG,MAPD,2CAAH,qDAWZzB,qBAAU,WACRuB,MACC,IAEH,IA2BM1E,EAAe,uCAAG,WAAOlD,GAAP,eAAAK,EAAA,yDACtBL,EAAMM,iBAEF4D,EAAQ+C,cAAgBO,EAHN,gCAIdtD,EAAQ6D,cAAc,CAC1Bd,YAAaO,IALK,OAOpBL,IAPoB,UAWlBO,IAAaJ,EAXK,uBAYd/C,EAAgBpF,EACnBqF,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,eAZF,SAedH,EAAcK,UAAU8C,EAAU,YAfpB,OAmBtBM,MAAM,oHACNZ,EAAQa,KAAK,KApBS,4CAAH,sDA2BrB,OACE,uBAAMpH,SAAUqC,EAAiBpC,UAAU,cAA3C,UACE,uBACEC,KAAK,OACLC,YAAY,oBACZqC,WAAS,EACTpC,UAAQ,EACRd,MAAOqH,EACPtG,SA9De,SAAClB,GAAW,IAEnBG,EACRH,EADFC,OAAUE,MAEZsH,EAAkBtH,IA2DdW,UAAU,cAEX4G,EACC,qBAAKpE,IAAKoE,EAAUnE,IAAI,gBAAgB2E,MAAM,MAAMrF,GAAG,iBAEvD,6GAGF,cAAC,EAAD,CAAYc,aAhEK,SAAC3D,GAAW,IAEnBwF,EACRxF,EADFC,OAAUuF,MAENC,EAAS,IAAIC,WASnB,GAPAD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnB8B,EAAY9B,IAGVL,EAAM2C,OAAS,EAAG,CAEpB,IAAM5C,EAAUC,EAAM,GACtBC,EAAOM,cAAcR,OAkDpBmC,IAAaJ,GACZ,sBAAKxG,UAAU,oBAAoBK,QAxBf,WACxBwG,EAAYL,IAuBR,UACE,0CACA,cAAC,IAAD,CAAiB3F,KAAMsE,SAI3B,uBAAOlF,KAAK,SAASZ,MAAM,iBAAiBW,UAAU,gBCvF7CsH,EAhBC,SAAC,GAA8B,IAA5BjB,EAA2B,EAA3BA,YAAajD,EAAc,EAAdA,QACxBkD,EAAUC,cAQhB,OACE,sBAAKvG,UAAU,mBAAf,UACE,cAAC,EAAD,CAAaqG,YAAaA,EAAajD,QAASA,IAChD,sBAAMpD,UAAU,oBAAoBK,QARjB,WACrBpC,EAAYsJ,UACZjB,EAAQa,KAAK,MAMX,2BCkBSK,EA5BG,SAAC,GAA0C,IAAxCnB,EAAuC,EAAvCA,YAAaoB,EAA0B,EAA1BA,WAAYrE,EAAc,EAAdA,QAE5C,OACE,+BACE,eAAC,IAAD,WACGqE,GAAc,cAAC,EAAD,CAAYrE,QAASA,IAEpC,cAAC,IAAD,UACGqE,EACC,qCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMvE,QAASA,MAEjB,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASvE,QAASA,EAASiD,YAAaA,SAI5C,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,cCyCCC,MA9Df,WAAe,MAGWpJ,oBAAS,GAHpB,mBAGNqJ,EAHM,KAGAC,EAHA,OAIiBtJ,mBAAS,MAJ1B,mBAIN4E,EAJM,KAIG2E,EAJH,KA4Cb,OArCAxC,qBAAU,WACRtH,EAAY+J,oBAAmB,SAACC,GAG5BF,EAFEE,EAES,CACT9B,YAAa8B,EAAK9B,YAClBvC,IAAKqE,EAAKrE,IACVsE,SAAUD,EAAKC,SACfjB,cAAe,SAACkB,GAAD,OAAUF,EAAKhB,cAAckB,KAInC,MAEbL,GAAQ,QAET,IAsBD,sBAAK9H,UAAU,MAAf,UACG6H,EACC,cAAC,EAAD,CACExB,YAvBY,WAKlB,IAAM4B,EAAOhK,EAAYmK,YACzBL,EAAW,CACT5B,YAAa8B,EAAK9B,YAClBvC,IAAKqE,EAAKrE,IACVsE,SAAUD,EAAKC,SACfjB,cAAe,SAACkB,GAAD,OAAUF,EAAKhB,cAAckB,OAcxCV,WAAYY,QAAQjF,GACpBA,QAASA,IAGX,kBAEF,4CACU,IAAIc,MAAOoE,cADrB,qC,MCtDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.faa53b73.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"; \r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n// Initialize Firebase\r\nexport default firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, {useState} from 'react';\r\nimport { authService } from \"fBase\";\r\n\r\nconst AuthForm = () => {\r\n  //value를 사용하기 위해 state 사용\r\n  const [error, setError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true); //새로운 유저인지 true: 계정 생성, false: 로그인\r\n\r\n  const onValueChanged = (event) => {\r\n    const {\r\n      target: { name, value }, //target: 변경이 일어난 부분\r\n    } = event; //get name and value\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value); //input의 value가 변경될 때마다 state의 값도 변한다. -> 리렌더링\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  // seetPersistance : 유저가 저장되는 방식 설정 local / session / none\r\n  const onFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = newAccount\r\n        ? await authService.createUserWithEmailAndPassword(email, password) // Create account\r\n        : await authService.signInWithEmailAndPassword(email, password); // Log in\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  //newAccount를 이전값과 반대인 값으로 바꿔주는 함수. true <-> false\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onFormSubmit} className=\"formContainer\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onValueChanged}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onValueChanged}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create new account\" : \"Log in\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      {/* 반대의 기능 사용 create new account <-> sign in */}\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create new account\"}\r\n      </span>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm\r\n","import React from \"react\";\r\nimport { firebaseInstance, authService } from \"fBase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n\r\n  const onSocialClick = async(event) => {\r\n    const {target: {name}} = event;\r\n    let provider;\r\n    \r\n    if(name === 'google'){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === 'github'){\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        className=\"icon_twitter\"\r\n      />\r\n      <AuthForm />\r\n      <article className=\"socialSignInBtns\">\r\n        <button\r\n          onClick={onSocialClick}\r\n          name=\"google\"\r\n          className=\"socialSignInBtn\"\r\n        >\r\n          Google 이메일로 로그인하기\r\n          <FontAwesomeIcon icon={faGoogle} className=\"socialIcon\"/>\r\n        </button>\r\n        <button\r\n          onClick={onSocialClick}\r\n          name=\"github\"\r\n          className=\"socialSignInBtn\"\r\n        >\r\n          Github 이메일로 로그인하기\r\n          <FontAwesomeIcon icon={faGithub} className=\"socialIcon\"/>\r\n        </button>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Nweet({ nweetObj, isOwner }) {\r\n  const [isEditing, setIsEditing] = useState(false); //Is editing or not\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text); //수정될 nweet\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete(); //id를 알고 있기 때문에 가능./\r\n      await storageService.refFromURL(nweetObj.attachmentURL).delete(); //Delete file\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setIsEditing((prev) => !prev);\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmitHandler = async(e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <article className=\"nweet\">\r\n      {isEditing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmitHandler} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={onTextChange}\r\n                  required\r\n                  autoFocus\r\n                  placeholder=\"당신의 Nweet을 수정하세요.\"\r\n                  value={newNweet}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Nweet 수정\" className=\"formBtn\"/>\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} alt=\"nweet_attachment\"/>}\r\n          {isOwner && (\r\n            <>\r\n              <div className=\"nweet_actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash}/>\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Nweet;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction FileUpload({onFileChange}) {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput_label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FileUpload\r\n","import React, {useState} from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport FileUpload from './FileUpload';\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nfunction NweetFactory({ userObj }) {\r\n    const [nweet, setNweet] = useState(\"\"); //only for the form\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentURL = \"\";\r\n\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n\r\n    if (attachment !== \"\") {\r\n      // Upload Image\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`); //child: 이미지의 path - folder\r\n      const response = await attachmentRef.putString(attachment, \"data_url\"); //.putString(data, data format)\r\n      attachmentURL = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentURL,\r\n      like: 0,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  }\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent; //finishedEvent.currentTarget.result 값을 ES6로 표현한 것\r\n      setAttachment(result);\r\n    };\r\n\r\n    // if (files.length > 0) {\r\n    //   //오류 수정 -> 파일선택하려다 취소한 경우\r\n    //   const theFile = files[0];\r\n      reader.readAsDataURL(theFile);\r\n    // }\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} className=\"factoryForm\">\r\n      <div className=\"factoryInput_container\">\r\n        <input\r\n          className=\"factoryInput_input\"\r\n          value={nweet}\r\n          onChange={onTextChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput_arrow\"/>\r\n      </div>\r\n      <FileUpload onFileChange={onFileChange}/>\r\n      {attachment && (\r\n          <div className=\"factoryForm_attachment\">\r\n            <img src={attachment} style={{ backgroundImage: attachment }} alt=\"attachment\"/>\r\n            <div className=\"factoryForm_clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default NweetFactory\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"fBase\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]); //nweets array from db\r\n\r\n  // const getNweets = async () => {\r\n  //   //get documents from 'nweets'collections\r\n  //   const dbNweets = await dbService.collection(\"nweets\").get(); //get all info of 'nweet'collection\r\n  //   dbNweets.forEach((document) => {\r\n  //     const nweetObject = {\r\n  //       ...document.data(),\r\n  //       id: document.id,\r\n  //     };\r\n  //     setNweets((prev) => [nweetObject, ...prev]); //make an array of documents.datas\r\n  //   });\r\n\r\n  // };\r\n\r\n  useEffect(() => {\r\n\r\n    //Listening to DB on real time\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <>\r\n        {nweets.map((nweet) => {\r\n          return (\r\n            <Nweet\r\n              key={nweet.id}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          );\r\n        })}\r\n      </>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nfunction Navigation({ userObj }) {\r\n  const location = useLocation();\r\n  const currentPage = location.pathname;\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"navMenu\">\r\n          <li id=\"liHome\">\r\n            <Link to=\"/\" className=\"navLink\">\r\n              <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n              {currentPage === \"/\" ? (\r\n                <span className=\"navBar currentPage\" id=\"pathHome\">\r\n                  HOME\r\n                </span>\r\n              ) : (\r\n                <span className=\"navBar\" id=\"pathHome\">\r\n                  HOME\r\n                </span>\r\n              )}\r\n            </Link>\r\n          </li>\r\n          <li id=\"liProfile\">\r\n            <Link to=\"/profile\" className=\"navLink\">\r\n              <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n              {currentPage === \"/profile\" ? (\r\n                <span className=\"navBar currentPage\" id=\"pathProfile\">\r\n                  {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n              ) : (\r\n                <span className=\"navBar\" id=\"pathProfile\">\r\n                  {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n              )}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { storageService } from \"fBase\";\r\nimport FileUpload from \"components/FileUpload\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction ProfileForm({ refreshUser, userObj }) {\r\n  const history = useHistory();\r\n  const [originProfile, setOriginProfile] = useState(\"\"); //storage에서 받아온 사진 변수\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [newPhoto, setNewPhoto] = useState(\"\"); //새로 업로드한 사진 변수\r\n\r\n  const getUrl = async() => {\r\n    const attachmentRef = storageService\r\n      .ref()\r\n      .child(`${userObj.uid}/userPhoto`); \r\n    await attachmentRef\r\n    .getDownloadURL().then((url) => {\r\n      setOriginProfile(url);\r\n      setNewPhoto(url);\r\n    });\r\n  } \r\n\r\n  useEffect(() => {\r\n    getUrl();\r\n  }, []);\r\n\r\n  const onTextChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent; //finishedEvent.currentTarget.result 값을 ES6로 표현한 것\r\n      setNewPhoto(result);\r\n    };\r\n\r\n    if (files.length > 0) {\r\n      //오류 수정 -> 파일선택하려다 취소한 경우\r\n      const theFile = files[0];\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n\r\n    //FIND -> UPDATE USER INFO\r\n    if (newPhoto !== originProfile) {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/userPhoto`);\r\n      await attachmentRef.putString(newPhoto, \"data_url\");\r\n    }\r\n\r\n    \r\n    alert(\"프로필이 성공적으로 업데이트 되었습니다.\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setNewPhoto(originProfile); //원래 사진으로 변경\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} className=\"profileForm\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Display your name\"\r\n        autoFocus\r\n        required\r\n        value={newDisplayName}\r\n        onChange={onTextChange}\r\n        className=\"formInput\"\r\n      />\r\n      {newPhoto ? (\r\n        <img src={newPhoto} alt=\"profile_photo\" width=\"300\" id=\"profilePhoto\"/>\r\n      ) : (\r\n        <h3>프로필 사진을 추가해주세요.</h3>\r\n      )}\r\n\r\n      <FileUpload onFileChange={onFileChange} />\r\n\r\n      {newPhoto !== originProfile && (\r\n        <div className=\"factoryForm_clear\" onClick={onClearAttachment}>\r\n          <span>Remove</span>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n      )}\r\n\r\n      <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;\r\n","import ProfileForm from \"components/ProfileForm\";\r\nimport { authService } from \"fBase\";\r\nimport React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n\r\n  //sign out\r\n  const onSignOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"profileContainer\">\r\n      <ProfileForm refreshUser={refreshUser} userObj={userObj}/>\r\n      <span className=\"formBtn cancelBtn\" onClick={onSignOutClick}>Sign Out </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  //   Router가 Routes를 보여주는 용도로만 사용되기 위해 state 이동 -> App.js\r\n  return (\r\n    <main>\r\n      <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj} />}\r\n        {/* A && B : B를 실행하기 위해선 A가 TRUE여야 한다. */}\r\n        <Switch>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\n\n// App.js 가 모든 로직들을 다룰 예정\nfunction App() {\n  // authService.currentUser : 현재 로그인 한 유저를 가리키나, 실제로 firebase를 통해 로그인/로그아웃한 지는 알 수 없다.\n\n  const [init, setInit] = useState(false); // 초기화 상태\n  const [userObj, setUserObj] = useState(null); //유저 정보를 가지는 상태\n\n  //onAuthStateChanged : 사용자의 로그인 상태를 관찰하는 관찰자를 추가해줌\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        //로그인한 유저 정보를 저장\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photoUrl: user.photoUrl,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        //로그아웃\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    //setUserObj(authService.currentUser); //Not Working! but {displayName: \"asdf\"}는 작동함.\n    //authService.currentUser가 너무 커서 바꾸ㅟ넋을 판단하기가 어렵다.\n    //option1. authService.currentUser object의 크기를 줄여준다.\n    //useEffect에서 setUserObj할때 첨부터 크기가 큰 user를 다 데려오는게 아니라 필요한 것만 데려오기.\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoUrl: user.photoUrl,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n\n    // option2 빈 {}안에 원래 user의 사본이 새 {}형태로 생성되는데 이 덕에 react가 새로운 {}가 생성됐네! 하고 재렌더링해줌\n    /* 하지만 오류 발생할 수 있음\n    setUserObj(Object.assign({}, user));\n    */\n  };\n\n  return (\n    <div className=\"App\">\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>\n        &copy; {new Date().getFullYear()} Nwitter - nomardcoders.com\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"style/style.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}